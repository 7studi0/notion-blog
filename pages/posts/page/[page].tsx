import { GetStaticPaths, GetStaticProps } from 'next'
import Head from 'next/head'
import Pagination from '../../../components/Pagination/Pagination'
import SinglePost from '../../../components/Post/SinglePost'
import Tag from '../../../components/Tag/Tag'
import {
  getAllPosts,
  getAllTags,
  getNumberOfPages,
  getPostsByPage,
} from '../../../lib/notionAPI'

type Props = {
  postsByPage: {
    id: string
    title: string
    description: string
    date: string
    tags: string[]
    slug: string
  }[]
  numberOfPage: number
  allTags: string[]
}

const BlogPageList = ({ postsByPage, numberOfPage, allTags }: Props) => {
  return (
    <div className="container mx-auto">
      <Head>
        <title>Sample Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 mt-8">
        <h1 className="text-5xl font-medium text-center mb-16">Sample Blog</h1>
        <section className="grid grid-cols-1 sm:grid-cols-2 gap-6">
          {postsByPage.map(post => (
            <div key={post.id}>
              <SinglePost
                title={post.title}
                description={post.description}
                date={post.date}
                tags={post.tags}
                slug={post.slug}
                isPaginationPage={true}
              />
            </div>
          ))}
        </section>
        <Pagination numberOfPage={numberOfPage} tag={''} />
        <Tag tags={allTags} />
      </main>
    </div>
  )
}

export const getStaticPaths: GetStaticPaths = async () => {
  const numberOfPage = await getNumberOfPages()

  const params = Array.from({ length: numberOfPage }, (_, i) => ({
    params: { page: (i + 1).toString() },
  }))

  return {
    paths: params,
    fallback: 'blocking',
  }
}

export const getStaticProps: GetStaticProps<Props> = async context => {
  const currentPage = context.params?.page
  const postsByPage = await getPostsByPage(parseInt(currentPage.toString(), 10))
  const numberOfPage = await getNumberOfPages()

  const allTags = await getAllTags()

  return {
    props: {
      postsByPage,
      numberOfPage,
      allTags,
    },
    revalidate: 10,
  }
}

export default BlogPageList
